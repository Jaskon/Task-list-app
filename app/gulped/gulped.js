var appModule=angular.module("taskListApp",["ui.router","ngAnimate","mainPage","taskList"]);angular.module("taskListApp").controller("headerController",["$scope",function(t){t.menuList=[{name:"Main page",link:"#!/mainpage",active:!1},{name:"List of tasks",link:"#!/tasklist",active:!1}],t.$on("pageChanged",function(e,a){t.menuList.forEach(function(t){t.name===a.name?t.active=!0:t.active=!1})})}]),angular.module("taskListApp").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(t,e,a){a.hashPrefix("!"),t.state("mainpage",{url:"/mainpage",template:"<main-page-component></main-page-component>"}).state("tasklist",{url:"/tasklist",template:"<task-list-component></task-list-component>"}),e.otherwise("/mainpage")}]),angular.module("taskListApp").factory("tasksModel",["$rootScope","$http",function(t,e){var a=[],n=function(t,a,n){e.post(t,a).then(function(){n&&n()},function(e){console.log(["Error while doing ",t," request:"].join("")),console.log(e.config.data)})},o=function(t){n("/updateTasks",a,t)},s=function(t,e){n("/updateTask",t,e)},i=function(t,e){n("/insertTask",{task:t},e)},r=function(t,e){n("/deleteTask",{task:t},e)},l=function(){var t;e.get("/getTasks").then(function(e){var n=new Array(a.length);for(t=0;t<a.length;t++)n[t]=0;var o=new Array(e.data.length);for(t=0;t<e.data.length;t++)o[t]=0;for(a.forEach(function(t,a){e.data.forEach(function(e,s){t._id===e._id&&t.severity===e.severity&&t.text===e.text&&t.completed===e.completed&&(n[a]=1,o[s]=1)})}),t=n.length-1;t>=0;t--)0===n[t]&&a.splice(t,1);for(t=0;t<o.length;t++)0===o[t]&&a.push(e.data[t])},function(t){console.log("Error while updating data from DataBase:"),console.log(t)})};return l(),{tasks:a,dbUpdateAll:o,dbUpdate:s,dbInsert:i,dbDelete:r,updateDataFromDB:l}}]),angular.module("mainPage",["ui.router","myFilters.elemInObjsEqualsToCount","myFilters.objsWithMinVariable"]),angular.module("mainPage").component("mainPageComponent",{templateUrl:"mainPageComponent/mainPage.template.html",controller:["$scope","$rootScope","$stateParams","$timeout","tasksModel",function(t,e,a,n,o){e.$broadcast("pageChanged",{name:"Main page"}),t.tasks=o.tasks;var s=function(){t.date=Date.now(),n(s,1e3)};s()}]}),angular.module("taskList",["ui.router","angular.filter","myFilters.isUnique","taskListApp"]);var taskListComponentController=function(t,e,a,n){var o=function(e){var a;for(a=0;a<t.tasks.length;a++)if(t.tasks[a].editing)return void alert(["You have a task already editing!","Save or cancel it!"].join(" "));t.tempTask.severity=e.severity+"",t.tempTask.text=e.text,e.editing=!0},s=function(e){return""===t.tempTask.text?void alert("Enter something in task's text field!"):(e.severity=+t.tempTask.severity,e.text=t.tempTask.text,e.editing=!1,void n.dbUpdate(e,n.updateDataFromDB))},i=function(t,e){t.ctrlKey&&13==t.keyCode&&s(e)},r=function(t){t.editing=!1},l=function(e){t.tasks.forEach(function(a,n){e._id===a._id&&t.tasks.splice(n,1)}),n.dbDelete(e,n.updateDataFromDB)},d=function(t){n.dbUpdate(t,n.updateDataFromDB)},u=function(){return""===t.taskToCreate.text?void alert("Enter something in task's text field!"):(t.taskToCreate.severity=+t.taskToCreate.severity,t.taskToCreate.severity||(t.taskToCreate.severity=1),n.dbInsert({severity:t.taskToCreate.severity,text:t.taskToCreate.text,completed:!1,editing:!1},n.updateDataFromDB),t.taskToCreate.severity="1",void(t.taskToCreate.text=""))};e.$broadcast("pageChanged",{name:"List of tasks"}),t.tasks=n.tasks,t.tempTask={},t.taskToCreate={severity:"1",text:""},t.editTask=o,t.saveEditTask=s,t.ctrlEnter_SaveEditTask=i,t.cancelEditTask=r,t.deleteTask=l,t.changeCompleteState=d,t.createTask=u};angular.module("taskList").component("taskListComponent",{templateUrl:"taskListComponent/taskList.template.html",controller:["$scope","$rootScope","$stateParams","tasksModel",taskListComponentController]});