var appModule=angular.module("taskListApp",["ui.router","ngAnimate","mainPage","taskList"]);angular.module("taskListApp").controller("headerController",["$scope","tasksModel","$http","$timeout",function(t,e,a,r){t.menuList=[{name:"Main page",link:"#!/mainpage",active:!1},{name:"List of tasks",link:"#!/tasklist",active:!1}],t.$on("pageChanged",function(e,a){t.menuList.forEach(function(t){t.name===a.name?t.active=!0:t.active=!1})}),t.httpErrorText="",t.responseError={state:!1,timer:{}},t.$on("responseError",function(e){1==t.responseError.state&&0===t.responseError.timer.$$state.status&&(r.cancel(t.responseError.timer),t.responseError.state=!1),r(function(){t.httpErrorText="Received an error from the server",t.responseError.state=!0,t.responseError.timer=r(function(){t.responseError.state=!1},3300)},0)}),t.requestError={state:!1,timer:{}},t.$on("requestError",function(e){1==t.requestError.state&&0===t.requestError.timer.$$state.status&&(r.cancel(t.requestError.timer),t.requestError.state=!1),r(function(){t.httpErrorText="Something did wrong while requesting server",t.requestError.state=!0,t.requestError.timer=r(function(){t.requestError.state=!1},3300)},0)}),t.updateData=function(){e.updateDataFromDB()},t.loading=!1;var n;t.$watch(function(){return e.currentRequests.length},function(){e.currentRequests.length>0?t.loading||n&&0===n.$$state.status||(n=r(function(){t.loading=!0},500)):(n&&0===n.$$state.status&&r.cancel(n),t.loading=!1)})}]),angular.module("taskListApp").config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function(t,e,a,r){a.hashPrefix("!"),t.state("mainpage",{url:"/mainpage",template:"<main-page-component></main-page-component>"}).state("tasklist",{url:"/tasklist",template:"<task-list-component></task-list-component>"}),e.otherwise("/mainpage")}]),angular.module("taskListApp").factory("tasksModel",["$rootScope","$http",function(t,e){var a=[],r=function(t,a,r){e.post(t,a).then(function(t){r&&r(t)},function(e){console.log(["Error while doing ",t," request:"].join("")),console.log(e.config.data)})},n=function(t){r("/updateTasks",a,t)},o=function(t,e){r("/updateTask",t,e);for(var n=0;n<a.length;n++)if(a[n]._id===t._id){for(var o in t)a[n][o]=t[o];break}},s=function(t,e){r("/insertTask",{task:t},function(a){t._id=a.data._id,e&&e()}),a.push(t)},i=function(t,e){r("/deleteTask",{task:t},e);for(var n=0;n<a.length;n++)if(a[n]._id===t._id){a.splice(n,1);break}},l=function(){var r;e.get("/getTasks").then(function(t){var e=new Array(a.length);for(r=0;r<a.length;r++)e[r]=0;var n=new Array(t.data.length);for(r=0;r<t.data.length;r++)n[r]=0;for(a.forEach(function(a,r){t.data.forEach(function(t,o){a._id===t._id&&a.severity===t.severity&&a.text===t.text&&a.completed===t.completed&&(e[r]=1,n[o]=1)})}),r=e.length-1;r>=0;r--)0===e[r]&&a.splice(r,1);for(r=0;r<n.length;r++)0===n[r]&&a.push(t.data[r])},function(e){t.$broadcast("responseError"),console.log("Error while updating data from DataBase:"),console.log(e)})};return l(),{tasks:a,dbUpdateAll:n,dbUpdate:o,dbInsert:s,dbDelete:i,updateDataFromDB:l,currentRequests:e.pendingRequests}}]),angular.module("mainPage",["ui.router","myFilters.elemInObjsEqualsToCount","myFilters.objsWithMinVariable"]),angular.module("mainPage").component("mainPageComponent",{templateUrl:"mainPageComponent/mainPage.template.html",controller:["$scope","$rootScope","$stateParams","$timeout","tasksModel",function(t,e,a,r,n){e.$broadcast("pageChanged",{name:"Main page"}),t.tasks=n.tasks;var o=function(){t.date=Date.now(),r(o,1e3)};o()}]}),angular.module("taskList",["ui.router","angular.filter","myFilters.isUnique","taskListApp"]);var taskListComponentController=function(t,e,a,r){var n=function(e){t.tempTask[e._id]={},t.tempTask[e._id].severity=e.severity+"",t.tempTask[e._id].text=e.text,e.editing=!0},o=function(e){return""===t.tempTask[e._id].text?void alert("Enter something in task's text field!"):(e.severity=+t.tempTask[e._id].severity,e.text=t.tempTask[e._id].text,e.editing=!1,void r.dbUpdate(e))},s=function(t,e){t.ctrlKey&&13==t.keyCode&&o(e)},i=function(t){t.editing=!1},l=function(t){r.dbDelete(t)},u=function(t){r.dbUpdate(t)},d=function(){return t.taskToCreate.text&&t.taskToCreate.severity?(t.taskToCreate.severity=+t.taskToCreate.severity,t.taskToCreate.severity||(t.taskToCreate.severity=0),r.dbInsert({severity:t.taskToCreate.severity,text:t.taskToCreate.text,completed:!1,editing:!1}),t.taskToCreateIsInvalid=!1,t.taskToCreate.severity="",void(t.taskToCreate.text="")):void(t.taskToCreateIsInvalid=!0)};e.$broadcast("pageChanged",{name:"List of tasks"}),t.tasks=r.tasks,t.tempTask=[],t.taskToCreate={severity:"",text:""},t.taskToCreateIsInvalid=!1,t.editTask=n,t.saveEditTask=o,t.ctrlEnter_SaveEditTask=s,t.cancelEditTask=i,t.deleteTask=l,t.changeCompleteState=u,t.createTask=d};angular.module("taskList").component("taskListComponent",{templateUrl:"taskListComponent/taskList.template.html",controller:["$scope","$rootScope","$stateParams","tasksModel",taskListComponentController]});